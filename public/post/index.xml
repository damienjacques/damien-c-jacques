<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Damien C. Jacques</title>
    <link>/post/</link>
    <description>Recent content in Posts on Damien C. Jacques</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 +0100</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Interesting Papers</title>
      <link>/post/interesting-papers/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/interesting-papers/</guid>
      <description>Here, I am listing several interesting papers from the scientific literature (under construction).
Network Rules for Biologically Inspired Adaptive Network Design Atsushi Tero, Seiji Takagi, Tetsu Saigusa, Kentaro Ito, Dan P. Bebber, Mark D. Fricker, Kenji Yumiki, Ryo Kobayashi, Toshiyuki Nakagaki. Science, 2010.
Transport networks are ubiquitous in both social and biological systems. Robust network performance involves a complex trade-off involving cost, transport efficiency, and fault tolerance. Biological networks have been honed by many cycles of evolutionary selection pressure and are likely to yield reasonable solutions to such combinatorial optimization problems.</description>
    </item>
    
    <item>
      <title>Air Casting Data Visualisation</title>
      <link>/post/air-casting-data-visualisation/</link>
      <pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/air-casting-data-visualisation/</guid>
      <description>This R Notebook describes the steps to download the data from the Air Quality API, convert them to R data and make some basic figures.
First, we need to load two packages to deal with the API request (httr) and format (jsonlite). You can use install.package(c(&amp;quot;httr&amp;quot;, &amp;quot;jsonlite&amp;quot;)) to install the packages.
library(httr) library(jsonlite) First, we need to get the ID of all sessions of interest (here, located in Brussels and with the tag ‘kid’).</description>
    </item>
    
    <item>
      <title>Nighttime Lights Calibration</title>
      <link>/post/nighttime-lights-calibration/</link>
      <pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/nighttime-lights-calibration/</guid>
      <description>Plot Nighttime Lights Time Series for Senegal First, we load the Version 4 DMSP-OLS Nighttime Lights Time Series (downloaded from here).
library(data.table) library(raster) ## Loading required package: sp ## ## Attaching package: &amp;#39;raster&amp;#39; ## The following object is masked from &amp;#39;package:data.table&amp;#39;: ## ## shift library(rgdal) ## rgdal: version: 1.2-16, (SVN revision 701) ## Geospatial Data Abstraction Library extensions to R successfully loaded ## Loaded GDAL runtime: GDAL 2.1.3, released 2017/20/01 ## Path to GDAL shared files: /usr/share/gdal/2.</description>
    </item>
    
  </channel>
</rss>